Krav för labb 2

1. Webbtjänst och data 
    Hämta JSON-data från en Webbtjänst, använd JavaScript (fetch,Axios) för att lista 
    minst 10 värden från datan som hämtats.

2. Layout
    Minst två html sidor, med följande tema och enkel navigation 
    (ska kännas som en sida).

3. Dynamisk uppdatering
    Använd JS (Eventlisteners) för att uppdatera sidan och få den att kännas 
    interaktiv för användaren.

4. Övriga förväntningar
    - Funktioner och parametrar
    - Sammanslagning av text med backticks
    - Använda if sats eller liknande med conditon
    - Loopa igenom innehåll med hjälp av for, while eller liknande
    - Arbeta med returvärden
    - Arbeta med noder, skapa eller manipulera
    - Arbeta med storage av något slag
    - Arbeta med events av något slag

5. Redovisning
    - Demonstration av webbplatsen via webbläsaren.
    - Demonstration av JSON-data via Insomnia eller liknande verktyg.
    - Presentation av JavaScript-koden som används för att hämta och visa data

6. Inlämning 
    - Packa din projektkod i en ZIP-fil och lämna in den senast på angivet datum.

Krav för VG 

1. Avancerad Funktionalitet 
    - Implementera funktionalitet för att visa, lägga till, 
   redigera och ta bort data från webbtjänsten (ej Cities-tjänsten). 
   Detta ska utföras med hjälp av ett webbformulär som är 
   kopplat till POST och PUT-anrop via API.
    - Använd Web Storage för att lagra och återanvända 
   minst ett värde mellan sidbelastningar, som inte är kopplat till Cities-tjänsten.

2. Datavisualisering
- Använd ett datavisualiseringsbibliotek som Chart.js eller liknande för att visualisera 
data från webbtjänsten på din webbplats

3. Enhetsformaterad Kod

   - Se till att din JavaScript-kod är enhetligt 
   formaterad och följer kodningsstandarder.
